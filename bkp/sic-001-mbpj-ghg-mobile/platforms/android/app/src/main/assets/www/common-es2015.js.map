{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./node_modules/@ionic/core/dist/esm/haptic-ccbda579.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@ionic/core/dist/esm/theme-c2dc54d9.js","./src/app/shared/services/evaluation-schedules/evaluation-schedules.service.ts","./src/app/shared/services/evaluations/evaluations.service.ts","./src/app/shared/services/faqs/faqs.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEiH;;;;;;;;;;;;;AC3CjH;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"common-es2015.js","sourcesContent":["const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","/**\n * Check to see if the Haptic Plugin is available\n * @return Returns `true` or false if the plugin is available\n */\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.selection();\n    }\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionStart();\n    }\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionChanged();\n    }\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionEnd();\n    }\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelectionEnd as c, hapticSelection as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { EvaluationSchedule } from './evaluation-schedules.model';\nimport { Form } from '@angular/forms';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { map, tap, catchError } from 'rxjs/operators';\nimport { throwError, Observable } from 'rxjs';\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EvaluationSchedulesService {\n  \n  // URL\n  private urlSchedule: string = environment.baseUrl + 'v1/evaluation-schedules/'\n\n  // Data\n  public schedules: EvaluationSchedule[] = []\n  public schedulesFiltered: EvaluationSchedule[] = []\n  \n  constructor(\n    private http: HttpClient\n  ) { }\n\n  create(body: Form): Observable<any> {\n    return this.http.post<any>(this.urlSchedule, body).pipe(\n      tap((res) => {\n        console.log('Create evaluation schedule response: ', res)\n      })\n    )\n  }\n\n  get(): Observable<EvaluationSchedule[]> {\n    return this.http.get<EvaluationSchedule[]>(this.urlSchedule).pipe(\n      tap((res) => {\n        this.schedules = res\n        console.log('Evaluation schedules: ', this.schedules)\n      })\n    )\n  }\n\n  filter(filterField): Observable<any> {\n    let urlFilter = this.urlSchedule + '?' + filterField + '/'\n    return this.http.get<EvaluationSchedule[]>(urlFilter).pipe(\n      tap((res) => {\n        this.schedulesFiltered = res\n        console.log('Filtered evaluation schedules: ', this.schedulesFiltered)\n      })\n    )\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Evaluation } from './evaluations.model';\nimport { Form } from '@angular/forms';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { map, tap, catchError } from 'rxjs/operators';\nimport { throwError, Observable } from 'rxjs';\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EvaluationsService {\n\n  // URL\n  private urlEvaluation: string = environment.baseUrl + 'v1/evaluations/'\n  \n  // Data\n  public evaluations: Evaluation[] = []\n  public evalutionsFiltered: Evaluation[] = []\n  \n  constructor(\n    private http: HttpClient\n  ) { }\n\n  create(body: Form): Observable<any> {\n    return this.http.post<any>(this.urlEvaluation, body).pipe(\n      tap((res) => {\n        console.log('Create evaluation response: ', res)\n      })\n    )\n  }\n\n  get(): Observable<Evaluation[]> {\n    return this.http.get<Evaluation[]>(this.urlEvaluation).pipe(\n      tap((res) => {\n        this.evaluations = res\n        console.log('Evaluations: ', this.evaluations)\n      })\n    )\n  }\n\n  filter(filterField): Observable<any> {\n    let urlFilter = this.urlEvaluation + '?' + filterField + '/'\n    return this.http.get<Evaluation[]>(urlFilter).pipe(\n      tap((res) => {\n        this.evalutionsFiltered = res\n        console.log('Filtered evaluations: ', this.evalutionsFiltered)\n      })\n    )\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Faq } from './faqs.model';\nimport { Form } from '@angular/forms';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { map, tap, catchError } from 'rxjs/operators';\nimport { throwError, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FaqsService {\n\n  // URL\n  private urlFaq: string = environment.baseUrl + 'v1/faqs/'\n\n  // Data\n  public faqs: Faq[]\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  get(): Observable<Faq[]>{\n    return this.http.get<Faq[]>(this.urlFaq).pipe(\n      tap((res: Faq[]) => {\n        this.faqs = res\n        console.log('Faqs: ', this.faqs)\n      })\n    )\n  }\n\n}\n"],"sourceRoot":""}