{"version":3,"sources":["./src/app/auth/forgot/forgot.component.html","./src/app/auth/login/login.component.html","./src/app/auth/auth.module.ts","./src/app/auth/auth.routing.ts","./src/app/auth/forgot/forgot.component.scss","./src/app/auth/forgot/forgot.component.ts","./src/app/auth/login/login.component.scss","./src/app/auth/login/login.component.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["module.exports = \"<ngx-loading-bar></ngx-loading-bar>\\n<div class=\\\"main-content auth-content\\\">\\n    <div class=\\\"container py-lg-8\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-lg-5 col-md-7\\\">\\n                <div class=\\\"card bg-secondary border-0 mb-0\\\">\\n                    <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\n                        <div class=\\\"client-logo-area\\\">\\n\\t\\t\\t\\t\\t\\t\\t<img class=\\\"client-logo\\\" src=\\\"assets/img/logo/mbpj-logo.png\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h6 class=\\\"h2 text-default d-inline-block mt-3 mb-0\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tSkim Rebat Cukai Taksiran Rumah Mesra Alam Hijau Petaling Jaya\\n\\t\\t\\t\\t\\t\\t\\t</h6>\\n\\t\\t\\t\\t\\t\\t</div>\\n                        <form [formGroup]=\\\"resetForm\\\">\\n                            <div class=\\\"form-group mb-3\\\" [ngClass]=\\\"{ focused: focusEmail === true }\\\">\\n                                <div class=\\\"input-group input-group-alternative\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text bg-info\\\">\\n                                            <i class=\\\"ni ni-email-83 text-white\\\"></i>\\n                                        </span>\\n                                    </div>\\n                                    <input \\n                                        class=\\\"form-control text-dark\\\"\\n                                        placeholder=\\\"Email\\\" \\n                                        type=\\\"email\\\"\\n                                        formControlName=\\\"email\\\"\\n                                        (focus)=\\\"focusEmail = true\\\" \\n                                        (blur)=\\\"focusEmail = false\\\"\\n                                    />\\n                                </div>\\n                                <div class=\\\"validation-errors\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-container *ngFor=\\\"let message of resetFormMessage.email\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"error-message\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  *ngIf=\\\"resetForm.get('email').hasError(message.type) && (resetForm.get('email').dirty || resetForm.get('email').touched)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  {{ message.message }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n                            </div>\\n                            <div class=\\\"text-center\\\">\\n                                <button \\n                                    type=\\\"button\\\"\\n                                    [disabled]=\\\"!resetForm.valid\\\"\\n                                    class=\\\"btn btn-info mt-4 mb-2\\\" \\n                                    (click)=\\\"reset()\\\"\\n                                >\\n                                    Reset password\\n                                </button>\\n                            </div>\\n                        </form>\\n                        <div class=\\\"row mt-1\\\">\\n                            <div class=\\\"col text-center\\\">\\n                                <button class=\\\"btn btn-icon btn-3 btn-outline-info\\\" type=\\\"button\\\" [routerLink]=\\\"['/auth/login']\\\">\\n                                    <span class=\\\"btn-inner--icon\\\"><i class=\\\"fas fa-angle-left\\\"></i></span>\\n                                    <span class=\\\"btn-inner--text\\\">Back to login</span>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<ngx-loading-bar></ngx-loading-bar>\\n<div class=\\\"main-content auth-content d-flex align-items-center\\\">\\n  <div class=\\\"container py-6\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-lg-5 col-md-7\\\">\\n        <div class=\\\"card bg-secondary border-0 mb-0\\\">\\n          <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\n            <div class=\\\"client-logo-area\\\">\\n              <img class=\\\"client-logo\\\" src=\\\"assets/img/logo/logo-erebat.png\\\" />\\n              <h6 class=\\\"h2 text-default d-inline-block mt-3 mb-0\\\">\\n                Skim Rebat Cukai Taksiran Rumah Mesra Alam Hijau Petaling Jaya\\n              </h6>\\n            </div>\\n            <form [formGroup]=\\\"loginForm\\\">\\n              <div\\n                class=\\\"form-group mb-1\\\"\\n                [ngClass]=\\\"{ focused: focusUsername === true }\\\"\\n              >\\n                <div class=\\\"input-group input-group-alternative\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text bg-info\\\">\\n                      <i class=\\\"ni ni-email-83 text-white\\\"></i>\\n                    </span>\\n                  </div>\\n                  <input\\n                    class=\\\"form-control\\\"\\n                    placeholder=\\\"Email\\\"\\n                    type=\\\"email\\\"\\n                    formControlName=\\\"username\\\"\\n                    (focus)=\\\"focusUsername = true\\\"\\n                    (blur)=\\\"focusUsername = false\\\"\\n                  />\\n                </div>\\n                <div class=\\\"validation-errors\\\">\\n                  <ng-container\\n                    *ngFor=\\\"let message of loginFormMessage.username\\\"\\n                  >\\n                    <div\\n                      class=\\\"error-message\\\"\\n                      *ngIf=\\\"\\n                        loginForm.get('username').hasError(message.type) &&\\n                        (loginForm.get('username').dirty ||\\n                          loginForm.get('username').touched)\\n                      \\\"\\n                    >\\n                      {{ message.message }}\\n                    </div>\\n                  </ng-container>\\n                </div>\\n              </div>\\n              <div\\n                class=\\\"form-group mb-1\\\"\\n                [ngClass]=\\\"{ focused: focusPassword === true }\\\"\\n              >\\n                <div class=\\\"input-group input-group-alternative\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text bg-info\\\">\\n                      <i class=\\\"ni ni-lock-circle-open text-white\\\"></i>\\n                    </span>\\n                  </div>\\n                  <input\\n                    class=\\\"form-control text-dark\\\"\\n                    placeholder=\\\"Password\\\"\\n                    type=\\\"password\\\"\\n                    formControlName=\\\"password\\\"\\n                    (focus)=\\\"focusPassword = true\\\"\\n                    (blur)=\\\"focusPassword = false\\\"\\n                  />\\n                </div>\\n                <div class=\\\"validation-errors\\\">\\n                  <ng-container\\n                    *ngFor=\\\"let message of loginFormMessage.password\\\"\\n                  >\\n                    <div\\n                      class=\\\"error-message\\\"\\n                      *ngIf=\\\"\\n                        loginForm.get('password').hasError(message.type) &&\\n                        (loginForm.get('password').dirty ||\\n                          loginForm.get('password').touched)\\n                      \\\"\\n                    >\\n                      {{ message.message }}\\n                    </div>\\n                  </ng-container>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6 col-sm-6\\\">\\n                  <div\\n                    class=\\\"custom-control custom-checkbox custom-checkbox-info\\\"\\n                  >\\n                    <input\\n                      class=\\\"custom-control-input\\\"\\n                      id=\\\"customCheckLogin\\\"\\n                      type=\\\"checkbox\\\"\\n                    />\\n                    <label class=\\\"custom-control-label\\\" for=\\\"customCheckLogin\\\">\\n                      <span>Remember me?</span>\\n                    </label>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-lg-6 col-sm-6 text-right\\\">\\n                  <label\\n                    class=\\\"text-right forgot-label\\\"\\n                    [routerLink]=\\\"['/auth/forgot']\\\"\\n                  >\\n                    <span>Forgot password</span>\\n                  </label>\\n                </div>\\n              </div>\\n              <div class=\\\"text-center\\\">\\n                <button\\n                  type=\\\"button\\\"\\n                  [disabled]=\\\"!loginForm.valid\\\"\\n                  class=\\\"btn btn-info my-1\\\"\\n                  (click)=\\\"login()\\\"\\n                >\\n                  Sign in\\n                </button>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { \n  BsDropdownModule, \n  ProgressbarModule, \n  TooltipModule, \n  CollapseModule\n} from 'ngx-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { AuthRoutes } from './auth.routing';\nimport { LoginComponent } from './login/login.component';\nimport { ForgotComponent } from './forgot/forgot.component';\nimport { LoadingBarModule } from '@ngx-loading-bar/core';\n\n@NgModule({\n  declarations: [\n    LoginComponent, \n    ForgotComponent\n  ],\n  imports: [\n    CommonModule,\n    BsDropdownModule.forRoot(),\n    ProgressbarModule.forRoot(),\n    TooltipModule.forRoot(),\n    CollapseModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(AuthRoutes),\n    LoadingBarModule\n  ]\n})\nexport class AuthModule { }\n","import { Routes } from '@angular/router';\nimport { ForgotComponent } from './forgot/forgot.component';\nimport { LoginComponent } from './login/login.component';\n\nexport const AuthRoutes: Routes = [\n    {\n        path: '',\n        children: [\n            {\n                path: 'forgot',\n                component: ForgotComponent\n            },\n            {\n                path: 'login',\n                component: LoginComponent\n            }\n        ]\n    }\n]","module.exports = \".client-logo-area {\\n  text-align: center;\\n  margin-bottom: 2rem;\\n}\\n.client-logo-area .client-logo {\\n  max-width: 40%;\\n}\\n.auth-content {\\n  background-color: #2dce89;\\n  background-image: url('green-leaf-plant.jpg');\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  height: 100vh;\\n  overflow: hidden;\\n}\\n.validation-errors {\\n  min-height: 25px;\\n}\\n.error-message {\\n  color: #f5365c;\\n  text-align: right;\\n  font-size: 0.8em;\\n  padding-top: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9waXBlbGluZS1kZXYvcGlwZWxpbmUtd29yay9lcmVtYmF0L2JrcC9zaWMtMDAxLW1icGotZ2hnLXdlYi9zcmMvYXBwL2F1dGgvZm9yZ290L2ZvcmdvdC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYXV0aC9mb3Jnb3QvZm9yZ290LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7RUFDQSxtQkFBQTtBQ0NKO0FEQUk7RUFDSSxjQUFBO0FDRVI7QURFQTtFQUNJLHlCQUFBO0VBQ0EsNkNBQUE7RUFDQSw0QkFBQTtFQUlBLHNCQUFBO0VBQ0EsYUFBQTtFQUNBLGdCQUFBO0FDQ0o7QURFQTtFQUNJLGdCQUFBO0FDQ0o7QURFQTtFQUNJLGNBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvZm9yZ290L2ZvcmdvdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jbGllbnQtbG9nby1hcmVhIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbiAgICAuY2xpZW50LWxvZ28ge1xuICAgICAgICBtYXgtd2lkdGg6IDQwJTtcbiAgICB9XG59XG5cbi5hdXRoLWNvbnRlbnQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZGNlODk7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi8uLi8uLi9hc3NldHMvaW1nL2JhY2tncm91bmQvZ3JlZW4tbGVhZi1wbGFudC5qcGcnKTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIC13ZWJraXQtYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAtbW96LWJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgLW8tYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLnZhbGlkYXRpb24tZXJyb3JzIHtcbiAgICBtaW4taGVpZ2h0OiAyNXB4O1xufVxuXG4uZXJyb3ItbWVzc2FnZSB7XG4gICAgY29sb3I6ICNmNTM2NWM7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgZm9udC1zaXplOiAwLjhlbTtcbiAgICBwYWRkaW5nLXRvcDogNXB4O1xufSIsIi5jbGllbnQtbG9nby1hcmVhIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAycmVtO1xufVxuLmNsaWVudC1sb2dvLWFyZWEgLmNsaWVudC1sb2dvIHtcbiAgbWF4LXdpZHRoOiA0MCU7XG59XG5cbi5hdXRoLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmRjZTg5O1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi8uLi8uLi9hc3NldHMvaW1nL2JhY2tncm91bmQvZ3JlZW4tbGVhZi1wbGFudC5qcGdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIC13ZWJraXQtYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgLW1vei1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAtby1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBoZWlnaHQ6IDEwMHZoO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4udmFsaWRhdGlvbi1lcnJvcnMge1xuICBtaW4taGVpZ2h0OiAyNXB4O1xufVxuXG4uZXJyb3ItbWVzc2FnZSB7XG4gIGNvbG9yOiAjZjUzNjVjO1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgZm9udC1zaXplOiAwLjhlbTtcbiAgcGFkZGluZy10b3A6IDVweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/shared/services/auth/auth.service';\nimport { LoadingBarService } from '@ngx-loading-bar/core';\nimport { NotifyService } from 'src/app/shared/handler/notify/notify.service';\n\n@Component({\n  selector: 'app-forgot',\n  templateUrl: './forgot.component.html',\n  styleUrls: ['./forgot.component.scss']\n})\nexport class ForgotComponent implements OnInit {\n  \n  // Form\n  focusEmail\n  resetForm: FormGroup\n  resetFormMessage = {\n    'email': [\n      { type: 'email', message: 'A valid email is required' },\n      { type: 'required', message: 'Email is required'}\n    ]\n  }\n\n  constructor(\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private loadingBar: LoadingBarService,\n    private notifyService: NotifyService\n  ) { }\n\n  ngOnInit() {\n    this.resetForm = this.formBuilder.group({\n      email: new FormControl('', Validators.compose([\n        Validators.email,\n        Validators.required\n      ]))\n    })\n  }\n\n  reset(){\n    this.loadingBar.start()\n    this.authService.resetPassword(this.resetForm.value).subscribe(\n      () => {\n        // Success\n        this.loadingBar.complete()\n      },\n      () => {\n        // Rejected\n        this.loadingBar.complete()\n      }, \n      () => {\n        // After\n        this.resetForm.reset()\n        this.successMessage()\n      }\n    )\n  }\n\n  successMessage() {\n    let title = 'Success'\n    let message = 'A reset link has been sent to your email'\n    this.notifyService.openToastr(title, message)\n  }\n\n}\n","module.exports = \".client-logo-area {\\n  text-align: center;\\n  margin-bottom: 2rem;\\n}\\n.client-logo-area .client-logo {\\n  max-width: 40%;\\n}\\n.auth-content {\\n  background-color: #2dce89;\\n  background-image: url('green-leaf-plant.jpg');\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  height: 100vh;\\n  overflow: hidden;\\n}\\n.forgot-label {\\n  font-size: 0.875rem;\\n  color: #525f7f;\\n  cursor: pointer;\\n}\\n.validation-errors {\\n  min-height: 25px;\\n}\\n.error-message {\\n  color: #f5365c;\\n  text-align: right;\\n  font-size: 0.8em;\\n  padding-top: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9waXBlbGluZS1kZXYvcGlwZWxpbmUtd29yay9lcmVtYmF0L2JrcC9zaWMtMDAxLW1icGotZ2hnLXdlYi9zcmMvYXBwL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBQTtFQUNBLG1CQUFBO0FDQ0o7QURBSTtFQUNJLGNBQUE7QUNFUjtBREVBO0VBQ0kseUJBQUE7RUFDQSw2Q0FBQTtFQUNBLDRCQUFBO0VBSUEsc0JBQUE7RUFDQSxhQUFBO0VBQ0EsZ0JBQUE7QUNDSjtBREVBO0VBQ0ksbUJBQUE7RUFDQSxjQUFBO0VBQ0EsZUFBQTtBQ0NKO0FERUE7RUFDSSxnQkFBQTtBQ0NKO0FERUE7RUFDSSxjQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9hdXRoL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNsaWVudC1sb2dvLWFyZWEge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtO1xuICAgIC5jbGllbnQtbG9nbyB7XG4gICAgICAgIG1heC13aWR0aDogNDAlO1xuICAgIH1cbn1cblxuLmF1dGgtY29udGVudCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJkY2U4OTtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uLy4uLy4uL2Fzc2V0cy9pbWcvYmFja2dyb3VuZC9ncmVlbi1sZWFmLXBsYW50LmpwZycpO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgLXdlYmtpdC1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIC1tb3otYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAtby1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uZm9yZ290LWxhYmVsIHtcbiAgICBmb250LXNpemU6IDAuODc1cmVtO1xuICAgIGNvbG9yOiAjNTI1ZjdmO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLnZhbGlkYXRpb24tZXJyb3JzIHtcbiAgICBtaW4taGVpZ2h0OiAyNXB4O1xufVxuXG4uZXJyb3ItbWVzc2FnZSB7XG4gICAgY29sb3I6ICNmNTM2NWM7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgZm9udC1zaXplOiAwLjhlbTtcbiAgICBwYWRkaW5nLXRvcDogNXB4O1xufSIsIi5jbGllbnQtbG9nby1hcmVhIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAycmVtO1xufVxuLmNsaWVudC1sb2dvLWFyZWEgLmNsaWVudC1sb2dvIHtcbiAgbWF4LXdpZHRoOiA0MCU7XG59XG5cbi5hdXRoLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmRjZTg5O1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi8uLi8uLi9hc3NldHMvaW1nL2JhY2tncm91bmQvZ3JlZW4tbGVhZi1wbGFudC5qcGdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIC13ZWJraXQtYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgLW1vei1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAtby1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBoZWlnaHQ6IDEwMHZoO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uZm9yZ290LWxhYmVsIHtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgY29sb3I6ICM1MjVmN2Y7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLnZhbGlkYXRpb24tZXJyb3JzIHtcbiAgbWluLWhlaWdodDogMjVweDtcbn1cblxuLmVycm9yLW1lc3NhZ2Uge1xuICBjb2xvcjogI2Y1MzY1YztcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIGZvbnQtc2l6ZTogMC44ZW07XG4gIHBhZGRpbmctdG9wOiA1cHg7XG59Il19 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport {\n  FormGroup,\n  FormControl,\n  FormBuilder,\n  Validators,\n} from \"@angular/forms\";\n\nimport { AuthService } from \"src/app/shared/services/auth/auth.service\";\nimport { ApplicationsService } from \"src/app/shared/services/applications/applications.service\";\nimport { ApplicationAssessmentsService } from \"src/app/shared/services/application-assessments/application-assessments.service\";\nimport { AssessmentAspectsService } from \"src/app/shared/services/assessment-aspects/assessment-aspects.service\";\nimport { EvaluationsService } from \"src/app/shared/services/evaluations/evaluations.service\";\nimport { EvaluationSchedulesService } from \"src/app/shared/services/evaluation-schedules/evaluation-schedules.service\";\nimport { HousesService } from \"src/app/shared/services/houses/houses.service\";\nimport { OrganisationsService } from \"src/app/shared/services/organisations/organisations.service\";\nimport { OrganisationTypesService } from \"src/app/shared/services/organisation-types/organisation-types.service\";\nimport { RebatesService } from \"src/app/shared/services/rebates/rebates.service\";\nimport { UsersService } from \"src/app/shared/services/users/users.service\";\nimport { UserOccupationsService } from \"src/app/shared/services/user-occupations/user-occupations.service\";\n\nimport { LoadingBarService } from \"@ngx-loading-bar/core\";\nimport { TicketQuestionsService } from \"src/app/shared/services/ticket-questions/ticket-questions.service\";\nimport { TicketAnswersService } from \"src/app/shared/services/ticket-answers/ticket-answers.service\";\nimport { ApplicationEventsService } from \"src/app/shared/services/application-events/application-events.service\";\nimport { HouseEventsService } from \"src/app/shared/services/house-events/house-events.service\";\nimport { TicketEventsService } from \"src/app/shared/services/ticket-events/ticket-events.service\";\nimport { UserEventsService } from \"src/app/shared/services/user-events/user-events.service\";\nimport { FaqsService } from \"src/app/shared/services/faqs/faqs.service\";\nimport { NotifyService } from \"src/app/shared/handler/notify/notify.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"],\n})\nexport class LoginComponent implements OnInit {\n  // Form\n  email: string = \"\";\n  pwd: string = \"\";\n  focusUsername;\n  focusPassword;\n\n  loginForm: FormGroup;\n  loginFormMessage = {\n    username: [\n      { type: \"required\", message: \"Email is required\" },\n      { type: \"email\", message: \"A valid email is required\" },\n    ],\n    password: [{ type: \"required\", message: \"Password is required\" }],\n  };\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private notifyService: NotifyService,\n    private router: Router,\n    private authService: AuthService,\n    private loadingBar: LoadingBarService,\n  ) {}\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: new FormControl(\n        \"\",\n        Validators.compose([Validators.required, Validators.email])\n      ),\n      password: new FormControl(\"\", Validators.compose([Validators.required])),\n    });\n  }\n\n  login() {\n    // this.loginCredentials.value.username = 'admin@prototype.com.my'\n    // this.loginCredentials.value.password = '4dm1nghg'\n    // console.log(this.loginCredentials.value)\n    this.loadingBar.start();\n    this.authService.obtainToken(this.loginForm.value).subscribe(\n      () => {\n        // console.log ('Accepted')\n        this.loadingBar.complete();\n      },\n      () => {\n        // console.log ('Denied')\n        this.loadingBar.complete();\n      },\n      () => {\n        this.getDetail();\n      }\n    );\n  }\n\n  debugLogin() {\n    this.loginForm.value.username = \"administrator@prototype.com.my\";\n    this.loginForm.value.password = \"a12345678A\";\n    //console.log(this.loginCredentials.value)\n    this.loadingBar.start();\n    this.authService.obtainToken(this.loginForm.value).subscribe(\n      () => {\n        // console.log ('Accepted')\n        this.loadingBar.complete();\n      },\n      () => {\n        // console.log ('Denied')\n        this.loadingBar.complete();\n      },\n      () => {\n        this.getDetail();\n      }\n    );\n  }\n\n  getDetail() {\n    this.authService.getUserDetail().subscribe(() => {\n      if (this.authService.userType == \"AD\") {\n        this.successMessage();\n        this.router.navigate([\"/dashboard\"]);\n      }\n    });\n  }\n\n  successMessage() {\n    let title = \"Success\";\n    let message = \"Welcome back!\";\n    this.notifyService.openToastr(title, message);\n  }\n}\n"],"sourceRoot":"webpack:///"}